2,4
1,2
7,5
0,3
1,7
4,1
5,5
3,0

proc 
let a = x
b = 0
c = 0
while a != 0:
    b = a % 8
    b = b ^ 2
    c = a >> b
    a = a >> 3
    b = b ^ 0b111
    b = b ^ c
    out(b & 0b111)

smallest value of a such that same output?

in first iteraction, states of variables:
before: (a, 0, 0)
(a, a % 8, 0)
(a, (a % 8) ^ 2, 0)
(a, (a % 8) ^ 2, a >> ((a % 8) ^ 2))
(a >> 3, (a % 8) ^ 2, a >> ((a % 8) ^ 2))
(a >> 3, ((a % 8) ^ 2) ^ 0b111, a >> ((a % 8) ^ 2))
(a >> 3, (((a % 8) ^ 2) ^ 0b111) ^ (a >> ((a % 8) ^ 2)), a >> ((a % 8) ^ 2))

want (((a & 0b111 ) ^ 2) ^ 0b111) ^ (a >> ((a & 0b111) ^ 2)) & 0b111 = 2
so (((a & 0b111 ) ^ 2) ^ 0b111) ^ (a >> ((a & 0b111) ^ 2)) is equivalent to 2, modulo 8
what values of a give 2?

